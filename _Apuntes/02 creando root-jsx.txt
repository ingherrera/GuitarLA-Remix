Como anteriormente mencionamos "/app/root.jsx" es el archivo principal del proyecto.

Lo eliminamos y creamos nuevamente para implementar desde cero todos los elementos que requiere el mismo.


⁡⁢⁣⁣1) Crear "/app/root.jsx"⁡

  Al momento de crear un nuevo archivo "remix" automaticamente escanea todos los archivos que estan en "/app" y se da cuenta que el archivo root.jsx no tiene contenido asi que lanza el sigueinte error:
  ⁡⁣⁣⁢---------------------------------------------
  Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: object. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.
  ---------------------------------------------⁡

  a) Creamos la funcion "App()" y la exportamos por default para que desaparezca el error anterior
    ⁡⁣⁣⁢---------------------------------------------
    export default function⁡ ⁡⁣⁢⁣App()⁡⁡⁣⁣⁢{
      return(⁡
        ⁡⁣⁢⁣<h1>Desde App</h1>⁡
      ⁡⁣⁣⁢)
    }
    ---------------------------------------------⁡

  b) "remix" basado en el contenido de funcion App() generá el siguiente codigo en el navegador
    ⁡⁢⁢⁢---------------------------------------------
    <html>
      <head></head>
      <body>⁡
        ⁡⁣⁢⁣<h1>Desde App</h1>⁡
      ⁡⁢⁢⁢</body>
    </html>
    ---------------------------------------------⁡


⁡⁢⁣⁣2) Cambiando el titulo de nuestro sitio⁡
  
  a) En "/app/root.jsx" creamos "Document()" que retornará codigo html
    ⁡⁣⁣⁢---------------------------------------------
    function⁡⁡⁣⁢⁣ ⁡⁣⁢⁣Document()⁡⁡⁣⁣⁢{
      return(⁡
        ⁡⁣⁢⁣<html>
          <head></head>
          <body></body>
        </html>⁡
      ⁡⁣⁣⁢)
    }
    ---------------------------------------------⁡

  b) Para cambiar el titulo añadimos "<title></title>" en "<head></head>"
    ⁡⁣⁣⁢---------------------------------------------
      function Document(){
        return(
          <html>
            <head>⁡
              ⁡⁣⁢⁣<title>GuitarLA - remix</title>⁡
            ⁡⁣⁣⁢</head>
            <body></body>
          </html>
        )
      }
      ---------------------------------------------⁡

  c) La usamos en "App()" como si fuera un componente 
      ⁡⁣⁣⁢---------------------------------------------
      export default function App(){
        return(⁡
        ⁡⁣⁢⁣  <Document>
          </Document>⁡
        ⁡⁣⁣⁢)
      }
      ---------------------------------------------⁡

  d) En el navegador se genera el codigo
   ⁡⁢⁢⁢ ---------------------------------------------
    <html>
      <head>⁡
        ⁡⁣⁢⁣<title>GuitarLA - remix</title>⁡
      ⁡⁢⁢⁢</head>
      <body></body>
    </html>
    ---------------------------------------------⁡


⁡⁢⁣⁣3) "Document" como nuestro "Layout Principal"⁡

  a) Todo el contenido definido en nuestro sitio estará enmarcado por "Document()"
    ⁡⁣⁣⁢---------------------------------------------
    export default function App(){
      return(
        <Document>⁡
          ⁡⁣⁢⁣<h1>Desde App</h1>⁡
        ⁡⁣⁣⁢</Document>
      )
    }
    ---------------------------------------------⁡
  
  b) En "Document()" dicho contenido lo recibimos en "children" y lo mostramos en "body"
  ⁡⁣⁡⁣⁣⁢---------------------------------------------
    function Document(⁡⁡⁣⁢⁣{children}⁡⁡⁣⁣⁢){
      return(
        <html>
          <head>
            <title>GuitarLA - remix</title>
          </head>
          <body>⁡
            ⁡⁣⁢⁣{children}⁡
          ⁡⁣⁣⁢</body>
        </html>
      )
    }
    ---------------------------------------------⁡

  c) En el navegador se genera el codigo
   ⁡⁢⁢⁡⁢⁢⁢ ---------------------------------------------
    <html>
      <head>
        <title>GuitarLA - remix</title>
      </head>
      <body>⁡
        ⁡⁣⁢⁣<h1>Desde App</h1>⁡
      ⁡⁢⁢⁢</body>
    </html>
    ---------------------------------------------⁡
    
⁡⁢⁣⁣5) Informacion "meta"⁡
    En "remix" es muy sencillo modificar la informacion "meta" para que nuestro sitio tenga un buen posicionamiento en los buscadores(mejorar el CEO)

    En general, la meta información o los metadatos se definen como:
    *) La información sobre la información ó 
    *) Los datos sobre los datos. 
    
    Normalmente la meta información se utiliza para proporcionar referencias o contextos acerca de los datos.

    ⁡⁢⁣⁢NO LO ENTENDI: "Podemos agregar tambien las etiquetas especiales de Facebook para poder compartir nuestro  portafolio en mis redes sociales"⁡

  a) Crear funcion "meta()" y exportarla para que este disponible y se inyecte en la ruta raiz, ya que estamos en "/app/root.jsx"
    ⁡⁣⁣⁢---------------------------------------------⁡
    ⁡⁣⁢⁣export function meta()⁡⁡⁣⁣⁢{
      return(  )
    }
    ---------------------------------------------⁡
    
  b) Retornamos un objeto que definirá:

    *) ⁡⁣⁣⁢"charset"⁡, regla que especifica la codificacion de caracteres usada en la hoja de estilos.

    *) ⁡⁣⁣⁢"title"⁡, elemento para definir el titulo de lad paginas en nuestro sitio.

    *) ⁡⁣⁣⁢"viewport"⁡, para controlar el tamaño y la forma de la ventana gráfica.

      ⁡⁣⁣⁢---------------------------------------------
      export function meta(){
        return (⁡
          ⁡⁣⁢⁣charset: ⁡⁢⁢⁢⁡⁢⁣⁣"UTF-8"⁡,
          ⁡⁣⁢⁣title:⁡ ⁡⁢⁢⁡⁢⁣⁣"GuitarLA - Remix"⁡,
          ⁡⁣⁢⁣viewport:⁡ ⁡⁢⁢⁢⁡⁢⁣⁣"witdh=device-witdh, initial-scale=1.0"⁡
        ⁡⁣⁣⁢)
      }
      ---------------------------------------------⁡

  c) Para que los metadatos anteriores se inyecten en la pagina, importamos en "/app/root.jsx" el componente "Meta" de "@remix-run/react" y lo usamos en "<head></head>" de "Document()"
  
    ⁡⁣⁣⁢---------------------------------------------⁡
    ⁡⁣⁢⁣import { Meta } from "@remix-run/react"⁡

    
    ⁡⁣⁣⁢function Document({children}){
      return(
        <html lang="es">
          <head>⁡
            ⁡⁣⁢⁣<Meta/>⁡
          ⁡⁣⁣⁢</head>
          <body> ...</body>
        </html>
      )
    }
    ---------------------------------------------⁡
  
  d) En el navegador se genera el codigo
    ⁡⁢⁢⁢---------------------------------------------
    <html lang="es">
      <head>⁡
        ⁡⁣⁢⁣<meta charset="UTF-8" />
        <title>GuitarLA - remix</title>
        <meta name="viewport" content="width = device-width, initial-scale=1.0" />⁡
      ⁡⁢⁢⁢</head>
      <body> .. </body>
    </html>
    ---------------------------------------------⁡


⁡⁢⁣⁣6) Agregar Hojas de estilos con "Links"⁡

  Vamos a agregar una hoja de estilos con la misma sintaxis que usamos en un archivo html, algo como esto:
  ⁡⁣⁣⁢---------------------------------------------
  ⁡⁣⁢⁣<link rel="stylesheet" href="/app/styles/index.css">⁡
  ⁡⁣⁣⁢---------------------------------------------⁡

  ⁡⁣⁣⁢NOTA IMPORTANTE: La hoja de estilos que vamos a agregar aqui se estará cargando en todo el proyecto(en todas las paginas y en todos los componentes)⁡

  Si deseamos tener hojas de estilos para cada componente para tener mejor perfomance tenemos que realizar los pasos "c", "d" y "e" en cada uno de ellos

  a) Previamente creamos la hoja de estilos "/app/styles/index.css"
  
  b) Importamos la hoja de estilos como "styles" en "/app/root.jsx"
    ⁡⁣⁣⁢---------------------------------------------⁡
    ⁡⁣⁢⁣import styles from "./styles/index.css"⁡
    ⁡⁣⁣⁢---------------------------------------------⁡

  c) Creamos y exportamos la funcion "links()" que retornará un arreglo de objetos(un objeto por cada hoja de estilos que deseemos agregar)

  Tambien podemos agregar imagenes para aplicarles un "prefetch()" y un "preload()" que son de las nuevas API para tener un buen perfomance en imagenes
    ⁡⁣⁣⁢---------------------------------------------⁡
    ⁡⁣⁢⁣export function links()⁡⁡⁣⁣⁢⁡⁣⁣⁢{⁡
      ⁡⁣⁢⁣return [

      ]⁡
    ⁡⁣⁣⁢}
    ---------------------------------------------⁡

  d) Creamos el objeto con los atributos "rel" y "href"
    ⁡⁣⁣⁢---------------------------------------------
    return[⁡
      ⁡⁣⁢⁣{
        rel:⁡⁢⁣⁣"stylesheet"⁡⁡⁣⁢⁣,
        href:⁡⁡⁢⁣⁣styles⁡
      ⁡⁣⁢⁣}⁡⁡
    ⁡⁣⁣⁢]
    ---------------------------------------------⁡

    NOTA: En el caso de que la hoja de estilos sea externa el  valor de "href" será la url donde se encuentra dicha hoja
    ⁡⁣⁣⁢---------------------------------------------⁡
      ⁡⁣⁢⁣{
        rel:⁡⁢⁣⁣"stylesheet"⁡⁡⁣⁢⁣,
        href:⁡⁡⁢⁣⁣"https://necolas.github.io/normalize.css/8.0.1/normalize.css"
      ⁡⁣⁢⁣}⁡⁡
    ⁡⁣⁣⁢---------------------------------------------⁡

 e) Para inyectar la hoja de estilos en la pagina, importamos en "/app/root.jsx" el componente ⁡⁣⁣⁢"Links"⁡ de "@remix-run/react" y lo usamos en "<head></head>" de "Document()"
  
    ⁡⁣⁣⁢---------------------------------------------⁡
    ⁡⁣⁢⁣import { Links } from "@remix-run/react"⁡

    ⁡⁣⁣⁢function Document({children}){
      return(
        <html lang="es">
          <head>
            <Meta />⁡
            ⁡⁣⁢⁣<Links />⁡
          ⁡⁣⁡⁣⁣⁢</head>
          <body> ...</body>
        </html>
      )
    }
    ---------------------------------------------⁡

  f) En el navegador se genera el codigo
    ⁡⁢⁡⁢⁢⁢---------------------------------------------
    <html lang="es">
      <head>
        <meta charset="UTF-8" />
        <title>GuitarLA - remix</title>
        <meta name="viewport" content="width = device-width, initial-scale=1.0" />⁡
        ⁡⁣⁢⁣<link rel="stylesheet" href="/build/_assets/index-LRTSMMGQ.css">⁡
      ⁡⁢⁢⁢</head>
      <body> .. </body>
    </html>
    ---------------------------------------------⁡

    NOTA: "href" deberia de ser "/app/styles/index.css" pero "remix" crea una version propia de "index.css" en "/public/build/_assets/index-LRTSMMGQ.css".

⁡⁢⁣⁣7) Agregando una fuente de "Google Fonts" ⁡
  En "https://fonts.google.com/" buscamos la fuente "Outfit" y seleccionamos los estilos "Regular 400", "Bold 700" y "Black 900" con lo que obtenemos los link para poder usarlos:

  <link rel="preconnect" href="https://fonts.googleapis.com">

  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

  <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@400;700;900&display=swap" rel="stylesheet">

  a) Agregamos un objeto para cada enlace en "links()"⁡⁣⁣⁢(como el orden es importante le indicamos que primero cargue las fuentes y despues nuestra hoja de estilo local)⁡
    ⁡⁣⁣⁢---------------------------------------------
    export function links(){
      return [⁡
        ⁡⁣⁢⁣{
          rel:"preconnect",
          href:"https://fonts.googleapis.com"
        },
        {
          rel:"preconnect",
          href:"https://fonts.gstatic.com",
          crossOrigin:"true"
        },
        {
          rel:"stylesheet",
          href:"https://fonts.googleapis.com/css2?family=Outfit:wght@400;700;900&display=swap"
        },⁡
        ⁡⁣⁣⁢{
          rel:"stylesheet",
          href:styles
        }
      ]
    }
    ---------------------------------------------⁡
 
  b) En el navegador se genera el codigo
    ⁡⁢⁡⁢⁢⁢---------------------------------------------
    <html lang="es">
      <head>
        <meta charset="UTF-8" />
        <title>GuitarLA - remix</title>
        <meta name="viewport" content="width = device-width, initial-scale=1.0" />⁡
  ⁡⁣⁢⁣      <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Outfit:wght@400;700;900&display=swap">⁡
        ⁡⁢⁢⁢<link rel="stylesheet" href="/build/_assets/index-LRTSMMGQ.css">
      </head>
      <body> .. </body>
    </html>
    ---------------------------------------------⁡

⁡⁢⁣⁣8) Agregando "normalize.css"⁡
  "normalize.css" es un archivo que resetea los elementos html para que se vean iguales en todos los navegadores

  a) Como resetea valores, lo ponemos antes que las fuentes de google y los estilos locales
    ⁡⁣⁣⁢---------------------------------------------
    export function links(){
      return [⁡
        ⁡⁣⁢⁣{
          rel:"stylesheet",
          href: "https://necolas.github.io/normalize.css/8.0.1/normalize.css"
        },⁡
        ⁡⁣⁣⁢{"fonts.googleapis.com"},
        {"fonts.gstatic.com},
        {"fonts.googleapis.com/family=Outfit:400;700;900"},
        {"index.css"}
      ]
    }
    ---------------------------------------------⁡

  b) En el navegador se genera el codigo
    ⁡⁢⁡⁢⁢⁢---------------------------------------------
    <html lang="es">
      <head>
        <meta charset="UTF-8" />
        <title>GuitarLA - remix</title>
        <meta name="viewport" content="width = device-width, initial-scale=1.0" />⁡
        ⁡⁣⁢⁣<link rel="stylesheet" href="https://necolas.github.io/normalize.css/8.0.1/normalize.css">⁡
  ⁡⁣⁢⁣      ⁡⁢⁢⁢<link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Outfit:wght@400;700;900&display=swap">
        <link rel="stylesheet" href="/build/_assets/index-LRTSMMGQ.css">
      </head>
      <body> .. </body>
    </html>
    ---------------------------------------------  ⁡
  
